using UnityEngine;
using UnityEngine.SceneManagement;
using UnityEditor;
using UnityEditor.SceneManagement;
using System.Collections;

public class Extras : EditorWindow
{
    public float saveTime = 15*60;
    public float nextSave = 0;
    public static bool saveOK = true;
    public int i = 1;
    static string[] FinalPath = new string[2];

    [MenuItem("Extras/AutoSave")]
    static void window()
    {
        Extras window = (Extras)EditorWindow.GetWindowWithRect(typeof(Extras), new Rect(0, 0, 150, 50));
        window.Show();
    }

    void OnGUI()
    {
        float timeToSave = (nextSave - (float)EditorApplication.timeSinceStartup)/60;
        EditorGUILayout.LabelField("To Next Save: "+ timeToSave.ToString("F2") + " min");
        EditorGUILayout.LabelField("Scene condition: "+ (saveOK ? "Success" : "Error"));
        Repaint();

        if (EditorApplication.timeSinceStartup > nextSave)
        {
            var currentScene = SceneManager.GetActiveScene();
            string[] path = EditorSceneManager.GetActiveScene().path.Split(char.Parse("/"));//取得当前场景路径储存于数组，如Assets/scene/sample.unity
            path[path.Length - 1] = "BackupScene1.unity";//更改末项即子文件项名称
            FinalPath[(0)] = string.Join("/", path);//存back1地址
            path[path.Length - 1] = "BackupScene2.unity";//更改末项即子文件项名称
            FinalPath[(1)] = string.Join("/", path);//存back2地址
            switch (i)
            {
                case 1:
                    saveOK = EditorSceneManager.SaveScene(EditorSceneManager.GetActiveScene(), FinalPath[0], true);
                    FileUtil.DeleteFileOrDirectory(FinalPath[(1)]);
                    FileUtil.DeleteFileOrDirectory(FinalPath[(1)] + ".meta");//删除backup2
                    i++;
                    break;
                case 2:
                    saveOK = EditorSceneManager.SaveScene(EditorSceneManager.GetActiveScene(), FinalPath[1], true);
                    FileUtil.DeleteFileOrDirectory(FinalPath[(0)]);
                    FileUtil.DeleteFileOrDirectory(FinalPath[(0)] + ".meta");//删除backup1
                    i = 1;
                    break;
            }
            nextSave = (float)EditorApplication.timeSinceStartup + saveTime;
            AssetDatabase.Refresh();
        }
    }
}
